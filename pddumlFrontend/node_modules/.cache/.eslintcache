[{"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/index.js":"1","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/App.js":"2","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Nav.js":"3","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/reportWebVitals.js":"4","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Feedback_Form.js":"5","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Form.js":"6","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Profile.js":"7","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Camera.js":"8"},{"size":644,"mtime":1676548851053,"results":"9","hashOfConfig":"10"},{"size":545,"mtime":1680809228237,"results":"11","hashOfConfig":"10"},{"size":491,"mtime":1676548851053,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1676548851053,"results":"13","hashOfConfig":"10"},{"size":1622,"mtime":1676566944637,"results":"14","hashOfConfig":"10"},{"size":4150,"mtime":1680844176843,"results":"15","hashOfConfig":"10"},{"size":2026,"mtime":1676569797633,"results":"16","hashOfConfig":"17"},{"size":4293,"mtime":1680845217656,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ix6qsn",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fy1m98",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/index.js",["46"],[],"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/App.js",["47"],[],"import React, { Component }  from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Camera from './Camera';\nimport Form from './Form';\n\n\nfunction App() {\n  const [textToggle, textToggleState] = useState(true)\n  return (\n    <div className=\"App\">\n       <div className=\"Tog\">\n       <button className='btnHead' onClick={ () => textToggleState(!textToggle) }>Upload or Capture</button>\n       </div>\n       {\n textToggle ?\n <Form />\n\n :\n<div className=\"Cam\"><Camera /> </div>\n}\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Nav.js",["48"],[],"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/reportWebVitals.js",[],[],"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Feedback_Form.js",["49","50","51"],[],"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Form.js",["52","53","54","55","56","57"],[],"import React, { Component }  from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './Nav.css'\nimport { decode } from 'jpeg-js';\n// import { Alert } from 'react-alert'\nfunction Form(){\n\n  const[plant,setPlant]= useState(\" \");\n  const [imgfile,setImgfile]= useState([]);\n  const [selectedFile,setselectedFile]=useState(null);\n  const [result,setResult] = useState(\"\")\n  const[plantname,setPlantname]= useState(\" \");\n  const [cnnimg,setImgCNN]=useState(\"\")\n const  onFileChange = name => {\n  setResult(\"\")\n\n  console.log(imgfile.length)\n  const file = name.target.files[0];\nsetPlant(URL.createObjectURL(name.target.files[0]))\n  // Create a new FileReader object to read the file as an array buffer\n  const reader = new FileReader();\n  \n  // Set up an event listener for when the file has finished loading\n  reader.addEventListener('load', (event) => {\n    // Get the array buffer from the loaded file data\n    const arrayBuffer = event.target.result;\n  \n    // Decode the JPEG image data and get the pixel values\n    const imageData = decode(new Uint8Array(arrayBuffer), { useTArray: true });\n    // setImgCNN(imageData);\n  var temp=[];\n  var cnntemp = [];\n    // Loop over the pixels in the image data and read their values\n    for (let y = 0; y < imageData.height; y++) {\n      var line = [];\n      for (let x = 0; x < imageData.width; x++) {\n        const index = (y * imageData.width + x) * 4;\n        const red = imageData.data[index];\n        const green = imageData.data[index + 1];\n        const blue = imageData.data[index + 2];\n        const alpha = imageData.data[index + 3];\n      \n        temp.push(blue);\n        line.push([red,green,blue])\n     \n  \n        // Do something with the pixel data here\n        // console.log(`Pixel at (${x}, ${y}): (${red}, ${green}, ${blue}, ${alpha})`);\n      }\n      cnntemp.push(line);\n    }\n    setImgfile(temp)\n    setImgCNN(cnntemp)\n  });\n  \n  // Start reading the file as an array buffer\n  reader.readAsArrayBuffer(file);\n}\n  \n  \n const  onFileUpload = () => {\n// console.log(imgfile,imgfile.length)\naxios.post(\"http://127.0.0.1:8000/gettomoato/\",{imagefile:imgfile,plantname:plantname,CNNImg:cnnimg})\n.then(data=>{\n  // if (data.data.status===\"success\"){\n    console.log(data.data)\n    alert(\"Plant - \"+data.data.plantname+\"\\nDisease - \"+data.data.disease+\"\\nConfidence - \"+data.data.confidence+\"\\n\"+data.data.comments)\n    // alert(\"The \"+plantname+\" Plant is \" + data.data.result)\n    // setResult(\"The \"+plantname+\" Plant is \" + data.data.result)\n    // setImgfile([])\n  // }\n})\n\n    // Create an object of formData\n    // const formData = new FormData();\n   \n    // // Update the formData object\n    // formData.append(\n    //   \"myFile\",\n    // selectedFile,\n    //   selectedFile.name\n    // );\n  \n    // console.log(selectedFile)\n    // Details of the uploaded file\n//     let output = \"\";\n// for (const [key, value] of formData) {\n//   // output += `${key}: ${value}\\n`;\n//   console.log(value)\n// }\n//    console.log(output)\n    // Request made to the backend api\n    // Send formData object\n    // axios.post(\"api/uploadfile\", formData);\n  };\n    return(<div className=\"App\">\n       <div className=\"Form\">\n<div className=\"box\">\n     <h3>{result}</h3>\n     <img height={250} width={250} src={plant}/>\n\n     </div>\n<div className= \"box\">\n\n      <p>\n        <strong>Upload Image of leaf:              </strong>\n      <input type=\"file\" name=\"imagefile\" id=\"imgfile\" onChange={(name)=>onFileChange(name)} required /></p>\n      {/* <p><strong>Select Plant:                      </strong>\n      \n      <select name=\"plantname\" id=\"plantname\" onChange={(name)=>setPlantname(name.target.value)} required>\n      <option value=\"\">Select Plant Name</option>\n        <option value=\"tomato\">Tomato</option>\n        <option value=\"bellpepper\">Papper Bell </option>\n        <option value=\"potato\">Potato</option>\n      </select></p> */}\n      <p><button className='btn' value=\"Submit\" \n      onClick={()=>{onFileUpload()}}>Submit</button></p>\n\n      <p><button className='btn'  value=\"Reset\" >Reset</button></p>\n\n      </div>\n    </div>\n  </div>\n    );\n}\nexport default Form;","/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Profile.js",["58","59","60"],[],"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Camera.js",["61","62","63","64","65","66","67","68","69","70"],[],"import React, { useRef, useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nfunction Camera() {\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n  const [hasPhoto, setHasPhoto] = useState(false);\n  const [facingMode, setFacingMode] = useState(\"user\");\n  const[plantname,setPlantname]= useState(\" \");\n  const [result,setResult] = useState(\"\")\n  const [cnnimg, setImgCNN]=useState(\"\");\n  const [imgfile,setImgfile]= useState([]);\n\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: { width: 256, height: 256, facingMode: facingMode }\n      })\n      .then((stream) => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef, facingMode]);\n\n  const takePhoto = () => {\n    const canvas = document.getElementById('myCanvas');\n    const width = 256;\n    const height = 256;\n\n    let video = videoRef.current;\n    let photo = photoRef.current;\n\n    photo.width = width;\n    photo.height = height;\n\n    let ctx = photo.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, width, height);\n    let imageData = ctx.getImageData(0, 0, photo.width, photo.height);\nlet pixels = imageData.data;\nlet temp_arr = []\nlet line = []\n// Loop through the pixel data and log the values\nconsole.log(pixels.length)\nlet j =0 ;\nfor (let i = 0; i < pixels.length; i += 4) {\n  if (j%256 === 0 && j >0 ){\n    temp_arr.push(line)\n    line=[];\n  }\n  \n  let red = pixels[i];\n  let green = pixels[i + 1];\n  let blue = pixels[i + 2];\n  j+=1;\n  line.push([red,green,blue])\n\n  // let alpha = pixels[i + 3];\n  // console.log('Pixel ' + i / 4 + ':', red, green, blue, alpha);\n}\ntemp_arr.push(line)\nsetImgCNN(temp_arr)\n\n    setHasPhoto(true);\n  };\n\n  const closePhoto = () => {\n    let photo = photoRef.current;\n    let ctx = photo.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, photo.width, photo.height);\n\n    setHasPhoto(false);\n  };\n\n  const switchCamera = () => {\n    if (facingMode === \"user\") {\n      setFacingMode(\"environment\");\n    } else {\n      setFacingMode(\"user\");\n    }\n  };\n\n  function saveCanvasImage(canvasId, filename) {\n    const canvas = document.getElementById(canvasId);\n    console.log(canvasId);\n    const dataURL = canvas.toDataURL(\"image/jpeg\");\n    const link = document.createElement(\"a\");\n    link.href = dataURL;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  function handleSaveButtonClick() {\n    saveCanvasImage(\"myCanvas\", \"myImage.jpeg\");\n    console.log(photoRef);\n  }\n   \n\n  const  onFileUpload = () => {\n    const canvas = document.getElementById('myCanvas');\nconst imgDataUrl = canvas.toDataURL();\n\naxios.post(\"http://127.0.0.1:8000/gettomoato/\", {\n  // imagefile: imgDataUrl,\n  CNNImg: cnnimg\n})\n.then(data => {\n  alert(\"Plant - \"+data.data.plantname+\"\\nDisease\"+data.data.disease+\"\\nConfidence\"+data.data.confidence+\"\\n\"+data.data.comments)\n  // setResult(\"Plant - \"+data.data.plantname+\"\\nDisease\"+data.data.disease+\"\\nConfidence\"+data.data.confidence+\"\\n\"+data.data.comments)\n})\n.catch(error => {\n  // console.error(error);\n});\n  };\n  \n\n  \n\n\n  return (\n    <div className=\"CameraApp\">\n      <div className=\"box\">\n          <h3>{result}</h3>\n      </div>\n      <div className=\"Camera\">\n        <video ref={videoRef}></video>\n        <p>\n          <button className=\"btn\" onClick={takePhoto}>\n            Capture\n          </button></p>\n          <p><button className=\"btn\" onClick={switchCamera}>\n            Switch Camera\n          </button></p>\n          </div>\n      <div className={'result' + (hasPhoto ? 'hasPhoto' : '')}>\n        <form >\n          <canvas id=\"myCanvas\" ref={photoRef}></canvas>\n          {/* <p><button className='btn' onClick={closePhoto}>Re-Capture</button></p> */}\n          <p><button className='btn' onClick={handleSaveButtonClick}>Download</button></p>\n          \n         \n          {/* <p><button className='btn'  value=\"Submit\" onClick={()=>{onFileUpload()}}>Submit</button></p> */}\n          {/* <canvas id=\"myCanvas\" width=\"400\" height=\"400\"></canvas> */}\n        </form>\n        \n  \n  \n  \n\n      </div>\n    </div>\n  );\n}\nexport default Camera;",{"ruleId":"71","severity":1,"message":"72","line":17,"column":5,"nodeType":"73","messageId":"74","endLine":17,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":7,"column":9,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"81","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":22},{"ruleId":"75","severity":1,"message":"82","line":11,"column":23,"nodeType":"77","messageId":"78","endLine":11,"endColumn":38},{"ruleId":"75","severity":1,"message":"83","line":13,"column":19,"nodeType":"77","messageId":"78","endLine":13,"endColumn":31},{"ruleId":"75","severity":1,"message":"84","line":42,"column":15,"nodeType":"77","messageId":"78","endLine":42,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":101,"column":6,"nodeType":"73","endLine":101,"endColumn":49},{"ruleId":"75","severity":1,"message":"87","line":4,"column":7,"nodeType":"77","messageId":"78","endLine":4,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":14,"column":19,"nodeType":"90","endLine":14,"endColumn":36},{"ruleId":"75","severity":1,"message":"91","line":9,"column":9,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":9,"column":19,"nodeType":"77","messageId":"78","endLine":9,"endColumn":31},{"ruleId":"75","severity":1,"message":"92","line":10,"column":17,"nodeType":"77","messageId":"78","endLine":10,"endColumn":26},{"ruleId":"75","severity":1,"message":"80","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":17},{"ruleId":"75","severity":1,"message":"93","line":12,"column":18,"nodeType":"77","messageId":"78","endLine":12,"endColumn":28},{"ruleId":"88","severity":1,"message":"94","line":32,"column":6,"nodeType":"95","endLine":32,"endColumn":28,"suggestions":"96"},{"ruleId":"75","severity":1,"message":"97","line":35,"column":11,"nodeType":"77","messageId":"78","endLine":35,"endColumn":17},{"ruleId":"75","severity":1,"message":"98","line":75,"column":9,"nodeType":"77","messageId":"78","endLine":75,"endColumn":19},{"ruleId":"75","severity":1,"message":"99","line":110,"column":10,"nodeType":"77","messageId":"78","endLine":110,"endColumn":22},{"ruleId":"75","severity":1,"message":"100","line":112,"column":7,"nodeType":"77","messageId":"78","endLine":112,"endColumn":17},"react/jsx-pascal-case","Imported JSX component Feedback_Form must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'plant' is assigned a value but never used.","'imgfile' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setselectedFile' is assigned a value but never used.","'setPlantname' is assigned a value but never used.","'alpha' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'WebcamComponent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'plantname' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setImgfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVideo'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'canvas' is assigned a value but never used.","'closePhoto' is assigned a value but never used.","'onFileUpload' is assigned a value but never used.","'imgDataUrl' is assigned a value but never used.",{"desc":"102","fix":"103"},"Update the dependencies array to be: [videoRef, facingMode, getVideo]",{"range":"104","text":"105"},[849,871],"[videoRef, facingMode, getVideo]"]