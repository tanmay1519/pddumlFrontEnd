{"ast":null,"code":"var _jsxFileName = \"/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './Nav.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [plant, setPlant] = useState(\" \");\n  const [imgfile, setImgfile] = useState([]);\n  const [selectedFile, setselectedFile] = useState(null);\n  const onFileChange = name => {\n    const file = name.target.files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', event => {\n      const image = new Image();\n      image.addEventListener('load', () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context = canvas.getContext('2d');\n\n        // Draw the image onto the canvas\n\n        // Get the image data from the canvas\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        // Loop over the pixels in the image data and read their values\n        for (let y = 0; y < canvas.height; y++) {\n          for (let x = 0; x < canvas.width; x++) {\n            const index = (y * canvas.width + x) * 4;\n            const red = imageData.data[index];\n            const green = imageData.data[index + 1];\n            const blue = imageData.data[index + 2];\n            const alpha = imageData.data[index + 3];\n            let temp = imgfile;\n            temp.append(blue);\n            setImgfile(temp);\n            // Do something with the pixel data here\n            console.log(`Pixel at (${x}, ${y}): (${red}, ${green}, ${blue}, ${alpha})`);\n          }\n        }\n      });\n\n      // Set the source of the image to the loaded file data\n      // image.src = event.target.result;\n    });\n\n    // Start reading the file as a data URL\n    reader.readAsDataURL(file);\n  };\n  const onFileUpload = () => {\n    console.log(imgfile);\n    // axios.post(\"http://127.0.0.1:8000/gettomoato/\",{tomato_unhealthy:imgfile})\n    // .then(data=>console.log(data.data))\n\n    // Create an object of formData\n    // const formData = new FormData();\n\n    // // Update the formData object\n    // formData.append(\n    //   \"myFile\",\n    // selectedFile,\n    //   selectedFile.name\n    // );\n\n    // console.log(selectedFile)\n    // Details of the uploaded file\n    //     let output = \"\";\n    // for (const [key, value] of formData) {\n    //   // output += `${key}: ${value}\\n`;\n    //   console.log(value)\n    // }\n    //    console.log(output)\n    // Request made to the backend api\n    // Send formData object\n    // axios.post(\"api/uploadfile\", formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Upload Image of leaf:              \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imagefile\",\n            id: \"imgfile\",\n            onChange: name => onFileChange(name),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Select Plant:                      \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"plant\",\n            id: \"plant\",\n            onChange: name => setPlant(name.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Tomato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Papper Bell \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Potato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: () => {\n              onFileUpload();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"reset\",\n            value: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 12\n  }, this);\n}\n_s(Form, \"NVs7qct6T4c7pBxeQAB1HcRa8rk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Component","axios","useState","Form","plant","setPlant","imgfile","setImgfile","selectedFile","setselectedFile","onFileChange","name","file","target","files","reader","FileReader","addEventListener","event","image","Image","canvas","document","createElement","width","height","context","getContext","imageData","getImageData","y","x","index","red","data","green","blue","alpha","temp","append","console","log","readAsDataURL","onFileUpload","value"],"sources":["/home/tanmay/Desktop/Tanmay Engineering/BEProject/FrontEnd/pddumlFrontend/src/Form.js"],"sourcesContent":["import React, { Component }  from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './Nav.css'\n\nfunction Form(){\n\n  const[plant,setPlant]= useState(\" \");\n  const [imgfile,setImgfile]= useState([]);\n  const [selectedFile,setselectedFile]=useState(null);\n  \n\n const  onFileChange = name => {\n      \nconst file = name.target.files[0];\nconst reader = new FileReader();\nreader.addEventListener('load', (event) => {\n  const image = new Image();\n\n  image.addEventListener('load', () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    const context = canvas.getContext('2d');\n\n    // Draw the image onto the canvas\n\n    // Get the image data from the canvas\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Loop over the pixels in the image data and read their values\n    for (let y = 0; y < canvas.height; y++) {\n      for (let x = 0; x < canvas.width; x++) {\n        const index = (y * canvas.width + x) * 4;\n        const red = imageData.data[index];\n        const green = imageData.data[index + 1];\n        const blue = imageData.data[index + 2];\n        const alpha = imageData.data[index + 3];\n        let temp = imgfile ;\n        temp.append(blue)\n        setImgfile(temp);\n        // Do something with the pixel data here\n        console.log(`Pixel at (${x}, ${y}): (${red}, ${green}, ${blue}, ${alpha})`);\n      }\n    }\n  });\n\n  // Set the source of the image to the loaded file data\n  // image.src = event.target.result;\n});\n\n// Start reading the file as a data URL\nreader.readAsDataURL(file);\n\n\n\n\n\n\n\n}\n  \n  \n const  onFileUpload = () => {\nconsole.log(imgfile)\n// axios.post(\"http://127.0.0.1:8000/gettomoato/\",{tomato_unhealthy:imgfile})\n// .then(data=>console.log(data.data))\n\n    // Create an object of formData\n    // const formData = new FormData();\n   \n    // // Update the formData object\n    // formData.append(\n    //   \"myFile\",\n    // selectedFile,\n    //   selectedFile.name\n    // );\n  \n    // console.log(selectedFile)\n    // Details of the uploaded file\n//     let output = \"\";\n// for (const [key, value] of formData) {\n//   // output += `${key}: ${value}\\n`;\n//   console.log(value)\n// }\n//    console.log(output)\n    // Request made to the backend api\n    // Send formData object\n    // axios.post(\"api/uploadfile\", formData);\n  };\n    return(<div className=\"App\">\n       <div class=\"Form\">\n\n     <form>\n      <p><strong>Upload Image of leaf:              </strong>\n      <input type=\"file\" name=\"imagefile\" id=\"imgfile\" onChange={(name)=>onFileChange(name)} required /></p>\n      <p><strong>Select Plant:                      </strong>\n      \n      <select name=\"plant\" id=\"plant\" onChange={(name)=>setPlant(name.target.value)} required>\n        <option value=\"\">Tomato</option>\n        <option value=\"\">Papper Bell </option>\n        <option value=\"\">Potato</option>\n      </select></p>\n      <p><input type=\"submit\" value=\"Submit\" \n      onClick={()=>{onFileUpload()}}/></p>\n\n      <p><input type=\"reset\" value=\"Reset\" /></p>\n     </form>\n    \n    </div>\n  </div>\n    );\n}\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}